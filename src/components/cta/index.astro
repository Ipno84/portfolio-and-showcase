---
const { as, variant, color, title, href, type } = Astro.props

let className = ['cta'];

if (variant === 'outline') className.push('cta--outline');
if (color === 'primary') className.push('cta--primary');

const cssClass = className.join(' ');
---

{as === 'a' && (
    <a href={href} title={title} class={cssClass}>
        <slot />
    </a>
)}

{as === 'button' && (
    <button type={type} title={title} class={cssClass}>
        <slot />
    </button>
)}

<style lang="scss">
    .cta {
        font-family: "Poppins", sans-serif;
        font-size: 0.875rem;
        line-height: 0.875rem;
        font-weight: 600;
        margin: 0;
        border-width: 1px;
        border-color: #24262f;
        border-style: solid;
        padding: 13px;
        cursor: pointer;
        text-decoration: none;
        background-color: #24262f;
        color: #ffffff;
        display: inline-block;
        border-radius: 8px;
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        &:hover {
            background-color: #63656e;
            border-color: #63656e;
        }
        &.cta--outline {
            background-color: transparent;
            border-color: #24262f;
            color: #24262f;
            &:hover {
                background-color: #24262f;
                color: #ffffff;
            }
        }
        &.cta--primary {
            background-color: #6e06f2;
            border-color: #6e06f2;
            color: #ffffff;
            &.cta--outline {
                background-color: transparent;
                color: #6e06f2;
                &:hover {
                    background-color: #6e06f2;
                    border-color: #6e06f2;
                    color: #ffffff;
                }
            }
            &:hover {
                background-color: #a168e8;
                border-color: #a168e8;
            }
        }
    }
</style>